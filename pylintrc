[MASTER]

# Specify a configuration file.
#rcfile=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=

# Profiled execution.
profile=no

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=CVS

# Pickle collected data for later comparisons.
persistent=yes

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=


[MESSAGES CONTROL]

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time.

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where
# it should appear only once).
disable=all


enable= blacklisted-name,
        #invalid-name,
        missing-docstring,
        empty-docstring,
        unneeded-not,
        #singleton-comparison,
        misplaced-comparison-constant,
		unidiomatic-typecheck,
        consider-using-enumerate,
        consider-iterating-dictionary,
		bad-classmethod-argument,
		bad-mcs-method-argument,
		bad-mcs-classmethod-argument,
		single-string-used-for-slots,
        #line-too-long,
		too-many-lines,
        #trailing-whitespace,
		missing-final-newline,
        trailing-newlines,
		multiple-statements,
        #superfluous-parens,
        #bad-whitespace,
		mixed-line-endings,
		unexpected-line-ending-format,
		#bad-continuation,
		wrong-spelling-in-comment,
		wrong-spelling-in-docstring,
		invalid-characters-in-docstring,
		multiple-imports,
		#wrong-import-order,
		ungrouped-imports,
		wrong-import-position,
		old-style-class,
		len-as-condition,
        syntax-error,
        unrecognized-inline-option,
        bad-option-value,
        init-is-generator,
        return-in-init,
        function-redefined,
        not-in-loop,
        return-outside-function,
        yield-outside-function,
        return-arg-in-generator,
        nonexistent-operator,
        duplicate-argument-name,
		abstract-class-instantiated,
		bad-reversed-sequence,
		continue-in-finally,
		method-hidden,
		access-member-before-definition,
		no-method-argument,
		no-self-argument,
		invalid-slots-object,
		assigning-non-slot,
		invalid-slots,
		inherit-non-class,
		inconsistent-mro,
		duplicate-bases,
		non-iterator-returned,
		unexpected-special-method-signature,
		invalid-length-returned,
		import-error,
		relative-beyond-top-level,
        used-before-assignment,
        undefined-variable,
        undefined-all-variable,
        invalid-all-object,
        no-name-in-module,
        unbalanced-tuple-unpacking,
        unpacking-non-sequence,
        bad-except-order,
        raising-bad-type,
        misplaced-bare-raise,
        raising-non-exception,
        notimplemented-raised,
        catching-non-exception,
        slots-on-old-class,
        super-on-old-class,
        bad-super-call,
        missing-super-argument,
        #no-member,
        not-callable,
        assignment-from-no-return,
        no-value-for-parameter,
        too-many-function-args,
        unexpected-keyword-arg,
        redundant-keyword-arg,
        invalid-sequence-index,
        invalid-slice-index,
        assignment-from-none,
        not-context-manager,
        invalid-unary-operand-type,
        unsupported-binary-operation,
        repeated-keyword,
        not-an-iterable,
        not-a-mapping,
        unsupported-membership-test,
        unsubscriptable-object,
        unsupported-assignment-operation,
        unsupported-delete-operation,
        invalid-metaclass,
		#logging-unsupported-format,
		#logging-format-truncated,
		#logging-too-many-args,
		#logging-too-few-args,
		#bad-format-character,
		#truncated-format-string,
		#mixed-format-string,
		#format-needs-mapping,
		#missing-format-string-key,
		#too-many-format-args,
		#too-few-format-args,
		#bad-str-strip-call,
		#print-statement,
		#parameter-unpacking,
        unpacking-in-except,
        old-raise-syntax,
        backtick,
        long-suffix,
        old-ne-operator,
        old-octal-literal,
        import-star-module-level,
        non-ascii-bytes-literal,
        fatal,
        astroid-error,
        parse-error,
        method-check-failed,
        raw-checker-failed,
        bad-inline-option,
        locally-disabled,
        locally-enabled,
        file-ignored,
        suppressed-message,
        useless-suppression,
        deprecated-pragma,
        c-extension-no-member,
        literal-comparison,
        no-self-use,
        no-classmethod-decorator,
        no-staticmethod-decorator,
        cyclic-import,
        duplicate-code,
        too-many-ancestors,
        too-many-instance-attributes,
        #too-few-public-methods,
        #too-many-public-methods,
        #too-many-return-statements,
        #too-many-branches,
        #too-many-arguments,
        #too-many-locals,
        #too-many-statements,
        too-many-boolean-expressions,
        consider-merging-isinstance,
        #too-many-nested-blocks,
        simplifiable-if-statement,
        redefined-argument-from-local,
        #no-else-return,
        consider-using-ternary,
        simplify-boolean-expression,
        #inconsistent-return-statements,
        unreachable,
        dangerous-default-value,
        pointless-statement,
        #pointless-string-statement,
        expression-not-assigned,
        unnecessary-pass,
        unnecessary-lambda,
        duplicate-key,
        deprecated-lambda,
        assign-to-new-keyword,
        useless-else-on-loop,
        exec-used,
        eval-used,
        confusing-with-statement,
        using-constant-test,
        lost-exception,
        assert-on-tuple,
        #attribute-defined-outside-init,
        bad-staticmethod-argument,
        #protected-access,
        arguments-differ,
        signature-differs,
        abstract-method,
        super-init-not-called,
        #no-init,
        non-parent-init-called,
        useless-super-delegation,
        unnecessary-semicolon,
        bad-indentation,
        mixed-indentation,
        lowercase-l-suffix,
        wildcard-import,
        deprecated-module,
        relative-import,
        reimported,
        import-self,
        misplaced-future,
        fixme,
        invalid-encoded-data,
        global-variable-undefined,
        global-variable-not-assigned,
        global-statement,
        global-at-module-level,
        unused-import,
        unused-variable,
        unused-argument,
        unused-wildcard-import,
        redefined-outer-name,
        redefined-builtin,
        redefine-in-handler,
        undefined-loop-variable,
        cell-var-from-loop,
        #bare-except,
        #broad-except,
        duplicate-except,
        nonstandard-exception,
        binary-op-exception,
        raising-format-tuple,
        property-on-old-class,
        keyword-arg-before-vararg,
        logging-not-lazy,
        logging-format-interpolation,
        bad-format-string-key,
        unused-format-string-key,
        bad-format-string,
        missing-format-argument-key,
        unused-format-string-argument,
        format-combined-specification,
        missing-format-attribute,
        invalid-format-index,
        anomalous-backslash-in-string,
        anomalous-unicode-escape-in-string,
        bad-open-mode,
        boolean-datetime,
        redundant-unittest-assert,
        deprecated-method,
        bad-thread-instantiation,
        shallow-copy-environ,
        apply-builtin,
        basestring-builtin,
        buffer-builtin,
        cmp-builtin,
        coerce-builtin,
        execfile-builtin,
        file-builtin,
        long-builtin,
        raw_input-builtin,
        reduce-builtin,
        standarderror-builtin,
        #unicode-builtin,
        #xrange-builtin,
        coerce-method,
        delslice-method,
        getslice-method,
        setslice-method,
        #no-absolute-import,
        #old-division,
        dict-iter-method,
        dict-view-method,
        next-method-called,
        metaclass-assignment,
        indexing-exception,
        raising-string,
        reload-builtin,
        oct-method,
        hex-method,
        nonzero-method,
        cmp-method,
        input-builtin,
        #round-builtin,
        intern-builtin,
        unichr-builtin,
        map-builtin-not-iterating,
        zip-builtin-not-iterating,
        range-builtin-not-iterating,
        filter-builtin-not-iterating,
        using-cmp-argument,
        eq-without-hash,
        div-method,
        idiv-method,
        rdiv-method,
		#exception-message-attribute,
		#invalid-str-codec,
		#sys-max-int,
		#bad-python3-import,
        deprecated-string-function,
        deprecated-str-translate-call,
        deprecated-itertools-function,
        deprecated-types-field,
		#next-method-defined,
		#dict-items-not-iterating,
		#dict-keys-not-iterating,
		#dict-values-not-iterating




[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html
output-format=text

# Include message's id in output
include-ids=no

# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]".
files-output=no

# Tells whether to display a full report or only the messages
reports=yes

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Add a comment according to your evaluation note. This is used by the global
# evaluation report (RP0004).
comment=no


[BASIC]

# Required attributes for module, separated by a comma
required-attributes=

# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,apply,input

# Regular expression which should only match correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression which should only match correct module level names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression which should only match correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression which should only match correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct instance attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,ex,Run,_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Regular expression which should only match functions or classes name which do
# not require a docstring
no-docstring-rgx=__.*__


[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching the beginning of the name of dummy variables
# (i.e. not used).
dummy-variables-rgx=_|dummy

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=


[FORMAT]

# Maximum number of characters on a single line.
max-line-length=80

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1
# tab).
indent-string='    '


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO


[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamically set).
ignored-classes=SQLObject

# When zope mode is activated, add a predefined set of Zope acquired attributes
# to generated-members.
zope=no

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E0201 when accessed. Python regular
# expressions are accepted.
generated-members=REQUEST,acl_users,aq_parent


[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes


[DESIGN]

# Maximum number of arguments for function / method
max-args=5

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branchs=12

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=7

# Minimum number of public methods for a class (see R0903).
min-public-methods=2

# Maximum number of public methods for a class (see R0904).
max-public-methods=20


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,string,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=


[CLASSES]

# List of interface methods to ignore, separated by a comma. This is used for
# instance to not check methods defines in Zope's Interface base class.
ignore-iface-methods=isImplementedBy,deferred,extends,names,namesAndDescriptions,queryDescriptionFor,getBases,getDescriptionFor,getDoc,getName,getTaggedValue,getTaggedValueTags,isEqualOrExtendedBy,setTaggedValue,isImplementedByInstancesOf,adaptWith,is_implemented_by

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=Exception
